/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.29).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package fr.fortil.irma.api;

import org.springframework.http.ResponseEntity;
import org.springframework.lang.NonNull;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import fr.fortil.irma.dto.Carte;
import fr.fortil.irma.dto.Cartes;
import fr.fortil.irma.dto.Categorie;
import fr.fortil.irma.dto.Categories;
import fr.fortil.irma.dto.Conclusion;
import fr.fortil.irma.dto.InitTirage;
import fr.fortil.irma.dto.Joueur;
import fr.fortil.irma.dto.Tirage;
import fr.fortil.irma.dto.TirageComplet;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

@Validated
@Api(value = "tirage", description = "the tirage API")
@RequestMapping(value = "/irma/v1")
public interface TirageApi {

    @ApiOperation(value = "retourne l'ensemble des cartes'", nickname = "getAllCartes", notes = "retourne toutes les cartes", response = Cartes.class, tags={ "allCarte", })
    @GetMapping(value = "/tirage/carte/get-all",
        produces = { "application/json" })
    ResponseEntity<Cartes> getAllCartes();


    @ApiOperation(value = "retourne l'ensemble des catégories'", nickname = "getAllCategories", notes = "retourne toutes les catégories", response = Categories.class, tags={ "allCategorie", })
    @GetMapping(value = "/tirage/categorie/get-all",
        produces = { "application/json" })
    ResponseEntity<Categories> getAllCategories();


    @ApiOperation(value = "retourne un catégorie spécifique'", nickname = "getByCodeCategorie", notes = "retourne une catégorie spécifique", response = Categorie.class, tags={ "getByCodeCategorie", })
    @GetMapping(value = "/tirage/categorie/code",
        produces = { "application/json" })
    ResponseEntity<Categorie> getByCodeCategorie();


    @ApiOperation(value = "retourne un carte spécifique'", nickname = "getByIdCarte", notes = "retourne une carte spécifique", response = Carte.class, tags={ "getByIdCategorie", })
    @GetMapping(value = "/tirage/carte/id",
        produces = { "application/json" })
    ResponseEntity<Carte> getByIdCarte();


    @ApiOperation(value = "retourne la conclusion du tirage", nickname = "getConclusionTirage", notes = "retourne la conclusion du tirage", response = Conclusion.class, tags={ "conclusionTirage", })
    @GetMapping(value = "/tirage/conclusion-tirage",
        produces = { "application/json" })
    ResponseEntity<Conclusion> getConclusionTirage(@NonNull @ApiParam(value = "numero du tirage en cours", required = true) @Validated @RequestParam(value = "num_tirage", required = true) String numTirage);


    @ApiOperation(value = "renvoi un tirage complet + conclusion  ", nickname = "getTirageComplet", notes = "renvoi un tirage complet + conclusion.  ", response = TirageComplet.class, tags={ "initierTirage", })
    @PostMapping(value = "/tirage/tirage-complet",
        produces = { "application/json" }, 
        consumes = { "application/json" })
    ResponseEntity<TirageComplet> getTirageComplet(@ApiParam(value = "info du joueur" ,required=true )  @Validated @RequestBody Joueur joueur);


    @ApiOperation(value = "retourne un tirage unitaire", nickname = "getTirageUnique", notes = "retourne un tirage unitaire", response = Tirage.class, tags={ "tirageUnitaire", })
    @GetMapping(value = "/tirage/tirage-unitaire",
        produces = { "application/json" })
    ResponseEntity<Tirage> getTirageUnique(@NonNull @ApiParam(value = "numero du tirage en cours", required = true) @Validated @RequestParam(value = "num_tirage", required = true) String numTirage);


    @ApiOperation(value = "renvoi un joueur avec un numéro tirage  ", nickname = "initierTirage", notes = "renvoi un joueur avec un numéro tirage.  ", response = InitTirage.class, tags={ "initierTirage", })
    @PostMapping(value = "/tirage/initier-tirage",
        produces = { "application/json" }, 
        consumes = { "application/json" })
    ResponseEntity<InitTirage> initierTirage(@ApiParam(value = "info du joueur" ,required=true )  @Validated @RequestBody Joueur joueur);

}
